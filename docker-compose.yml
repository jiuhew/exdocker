services:
  mysql:
    image: mysql:8.4
    container_name: rx_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpass}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-appdb}
      MYSQL_USER: ${MYSQL_USER:-appuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-apppass}
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${MYSQL_ROOT_PASSWORD:-rootpass}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - app_network

  redis:
    image: redis:7.4-alpine
    container_name: rx_redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - app_network

  backend:
    build: ./backend
    container_name: rx_backend
    environment:
      DJANGO_SETTINGS_MODULE: core.settings.development
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE:-appdb}
      DB_USER: ${MYSQL_USER:-appuser}
      DB_PASSWORD: ${MYSQL_PASSWORD:-apppass}
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      PYTHONUNBUFFERED: "1"
    volumes:
      - ./backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - app_network

  celery:
    build: ./backend
    container_name: rx_celery
    environment:
      DJANGO_SETTINGS_MODULE: core.settings.development
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE:-appdb}
      DB_USER: ${MYSQL_USER:-appuser}
      DB_PASSWORD: ${MYSQL_PASSWORD:-apppass}
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      PYTHONUNBUFFERED: "1"
    command: sh -c "python manage.py migrate && celery -A core worker -l info"
    volumes:
      - ./backend:/app
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app_network

  celery-beat:
    build: ./backend
    container_name: rx_celery_beat
    environment:
      DJANGO_SETTINGS_MODULE: core.settings.development
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE:-appdb}
      DB_USER: ${MYSQL_USER:-appuser}
      DB_PASSWORD: ${MYSQL_PASSWORD:-apppass}
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      PYTHONUNBUFFERED: "1"
    command: celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/app
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app_network

  frontend:
    build: ./frontend
    container_name: rx_frontend
    environment:
      - VITE_API_BASE=/api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app_network

  nginx:
    image: nginx:1.27-alpine
    container_name: rx_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app_network

volumes:
  mysql_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  app_network:
    driver: bridge


